datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model Artist {
  hash String @id @db.VarChar(40)
  name String @db.Text

  spotify_id String? @db.VarChar(22)
  deezer_id  String? @db.VarChar(32)

  spotify_images        String? @db.Text
  spotify_images_colors String? @db.Text
  deezer_image          String? @db.Text
  deezer_images_colors  String? @db.Text

  genres    String? @db.Text
  cached_at String  @db.VarChar(16)
}

model Album {
  hash    String @id @db.VarChar(40)
  name    String @db.Text
  artists String @db.Text

  spotify_id String? @db.VarChar(22)
  deezer_id  String? @db.VarChar(32)

  spotify_covers        String? @db.Text
  spotify_covers_colors String? @db.Text
  deezer_cover          String? @db.Text
  deezer_covers_colors  String? @db.Text

  release_date String? @db.VarChar(16)
  cached_at    String  @db.VarChar(16)
}

model Track {
  hash String @id @db.VarChar(40)

  name    String @db.Text
  artists String @db.Text
  album   String @db.Text

  spotify_id String? @db.VarChar(22)
  deezer_id  String? @db.VarChar(32)
  genius_id  String? @db.VarChar(32)

  spotify_covers        String? @db.Text
  spotify_covers_colors String? @db.Text
  deezer_cover          String? @db.Text
  deezer_covers_colors  String? @db.Text

  duration       Int?           @db.Integer
  preview        String?        @db.VarChar(255)

  cached_at String @db.VarChar(16)
}

model TrackFeatures {
  spotify_id String @id @db.VarChar(22)

  danceability     Float @db.DoublePrecision
  energy           Float @db.DoublePrecision
  loudness         Float @db.DoublePrecision
  speechiness      Float @db.DoublePrecision
  acousticness     Float @db.DoublePrecision
  instrumentalness Float @db.DoublePrecision
  liveness         Float @db.DoublePrecision
  valence          Float @db.DoublePrecision
  tempo            Float @db.DoublePrecision
}
